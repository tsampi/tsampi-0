# Tox (http://tox.testrun.org/) is a tool for running tests
# in multiple virtualenvs. This configuration file will run the
# test suite on all supported python versions. To use it, "pip install tox"
# and then run "tox" from this directory.
#
# To run tests locally with multiple python versions using tox, install the
# different python versions through pyenv. Then specify the python versions
# installed with pyenv in the shell before running the tests, e.g. like this:
# $ pyenv local  2.6.7  2.7.5  3.3  3.4.1
# $ tox
#
[flake8]
max-line-length = 100
exclude = .tox,dist,build
ignore = E133
builtins = basestring

# Settings for py.test and tox
[tox]
envlist = py26, py27, py33, py34, pep8, flake8, docs, testcoverage

[testenv]
commands = {envpython} setup.py test
basepython=python
norecursedirs=.tox .git dist
deps =
    pytest
whitelist_externals=
    py.test

[pytest]
python_functions=test_
norecursedirs=.tox .git dist build *egg
pep8maxlinelength = 100
pep8ignore =
    docs/source/conf.py ALL

[testenv:testcoverage]
deps =
    {[testenv]deps}
    coverage<=3.7.1
commands=
    coverage run --branch  -m pytest tests
    coverage report --include="pydblite*,tests*"
    coverage html -d docs/build/htmlcoverage

[testenv:pydef]
commands=
    py.test

[testenv:py26]
basepython=python2.6
commands=
    {[testenv:pydef]commands}

[testenv:py27]
basepython=python2.7
commands=
    {[testenv:pydef]commands}

[testenv:py33]
basepython=python
commands=
    {[testenv:pydef]commands}

[testenv:py34]
basepython=python3.4
commands=
    {[testenv:pydef]commands}

[testenv:pep8]
deps =
    {[testenv]deps}
    pytest-pep8
commands=
    py.test --pep8

[testenv:flake8]
basepython=python3.4
whitelist_externals=
    {[testenv]whitelist_externals}
    flake8
deps =
    {[testenv]deps}
    flake8
    pep8-naming
commands=
    flake8 pydblite

[testenv:flake8-complexity]
whitelist_externals=
    {[testenv:flake8]whitelist_externals}
    sh
deps =
    {[testenv:flake8]deps}
    mccabe
commands=
    sh -c "flake8 --max-complexity=10 pydblite || true"

[testenv:isort]
deps =
    isort
whitelist_externals =
    isort
commands = python -c "import subprocess, sys; output = subprocess.check_output('isort -q --stdout --diff --recursive pydblite tests *.py', shell=True); print output; sys.exit(len(output) != 0)"

[testenv:docs]
# sphinxcontrib/restbuilder does not support python 3, so force python 2.7
basepython=python2.7
# touch and mkdir is not installed in virtualenv, so ask it to ignore that.
whitelist_externals=
    touch
    mkdir
changedir=docs
install_command=pip install {opts} {packages}
deps =
    pytest
    sphinx
    sphinxcontrib-inlinesyntaxhighlight
    sphinxcontrib-fulltoc
    sphinxcontrib-restbuilder
    sphinxcontrib-issuetracker
    cloud_sptheme
commands=
    mkdir -p build/doccoverage
    touch build/doccoverage/python.txt
    sphinx-build -b coverage -d build/doctrees source build/doccoverage
    py.test --doctest-glob='*.rst'
    sphinx-build -b html -d build/doctrees source build/html
