# 
msgid ""
msgstr ""
"Project-Id-Version: PyDbLite 3.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2014-10-09 23:41+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/pythonengine.rst:4
msgid "Pure-Python engine"
msgstr "Moteur pur-Python"

#: ../../source/pythonengine.rst:9
msgid ""
"The pure-Python engine consists of one module, pydblite.py. To use it, "
"import the class :class:`Base <pydblite.pydblite._Base>` from this module:"
msgstr ""
"Le moteur pur-Python consiste en un module unique, pydblite.py. Pour "
"l'utiliser, importer la classe :class:`Base <pydblite.pydblite._Base>` "
"depuis ce module:"

#: ../../source/pythonengine.rst:16
msgid "Create or open a database"
msgstr ""

#: ../../source/pythonengine.rst:18
msgid "Create a database instance, passing it a path in the file system"
msgstr ""
"créer une instance de base de données, en donnant un nom de fichier comme "
"argument"

#: ../../source/pythonengine.rst:24
msgid "For a new database, define the field names"
msgstr "Pour une nouvelle base, définissez les noms des champs"

#: ../../source/pythonengine.rst:30
msgid ""
"You don't have to define the field types. Any value will be accepted as long"
" as it can be serialized by the cPickle module:"
msgstr ""
"Vous n'avez pas à définir le type des champs. PyDbLite accepte toute valeur "
"qui peut être sérialisée par le module cPickle"

#: ../../source/pythonengine.rst:32
msgid "strings"
msgstr ""

#: ../../source/pythonengine.rst:33
msgid "Unicode strings"
msgstr ""

#: ../../source/pythonengine.rst:34
msgid "integers"
msgstr ""

#: ../../source/pythonengine.rst:35
msgid "floats"
msgstr ""

#: ../../source/pythonengine.rst:36
msgid ""
"dates and datetimes (instances of the date and datetime classes in the "
"datetime module)"
msgstr ""

#: ../../source/pythonengine.rst:37
msgid "user-defined classes"
msgstr ""

#: ../../source/pythonengine.rst:40
msgid ""
":func:`db.exists() <pydblite.pydblite._Base.exists>` indicates if the base "
"exists."
msgstr ""
":func:`db.exists() <pydblite.pydblite._Base.exists>` indique si la base existe "
"exists."

#: ../../source/pythonengine.rst:42
msgid "if the base exists, open it"
msgstr "si la base existe déjà, pour l'ouvrir"

#: ../../source/pythonengine.rst:49
msgid ""
"You can pass a parameter \"mode\" to the :func:`create() "
"<pydblite.pydblite._Base.create>` method, to specify what you want to do if "
"the base already exists in the file system"
msgstr ""
"on peut passer un paramètre \"mode\" à la méthode :func:`create() <pydblite.pydblite._Base.create>`"
"pour indiquer ce qu'il faut faire si la base existe déjà sur le disque"

#: ../../source/pythonengine.rst:51
msgid ""
"mode = \"open\" : :python:`db.create('name', 'age', 'size', mode=\"open\")` "
"opens the database and ignores the field definition"
msgstr ""
"mode = \"open\" : :python:`db.create('name', 'age', 'size', mode=\"open\")` "
"ouvre la base en ignorant la définition des champs"

#: ../../source/pythonengine.rst:52
msgid ""
"mode = \"override\" : :python:`db.create('name', 'age', 'size', "
"mode=\"override\")` erases the existing base and creates a new one with the "
"field definition"
msgstr ""
"mode = \"override\" : :python:`db.create('name', 'age', 'size', "
"mode=\"override\")`  efface la base existante et en crée une nouvelle avec les définitions de champs"

#: ../../source/pythonengine.rst:53
msgid ""
"if :python:`mode` is not specified and the base already exists, an "
":python:`IOError` is raised"
msgstr ""
"si le :python:`mode` n'est pas précisé et que la base existe déjà, "
"une exception :python:`IOError` est déclenchée"

#: ../../source/pythonengine.rst:56
msgid "Insert, update, delete a record"
msgstr ""

#: ../../source/pythonengine.rst:59
msgid "insert a new record"
msgstr ""

#: ../../source/pythonengine.rst:62
msgid "by keywords"
msgstr "par mots-clés"

#: ../../source/pythonengine.rst:68
msgid "If some fields are missing, they are initialized with the value None"
msgstr "Si certains champs manquent, ils sont initialisés à la valeur None"

#: ../../source/pythonengine.rst:71
msgid "by positional arguments"
msgstr "par arguments positionnels"

#: ../../source/pythonengine.rst:77
msgid ""
"The arguments must be provided in the same order as in the "
":python:`create()` method"
msgstr "Les arguments doivent être fournis dans le même ordre que dans la méthode :python:`create()`"

#: ../../source/pythonengine.rst:80
msgid "save the changes on disk"
msgstr "pour sauvegarder les changements sur le disque"

#: ../../source/pythonengine.rst:86
msgid ""
"If you don't commit the changes, the insertion, deletion and update "
"operations will not be saved on disk. As long as changes are not commited, "
"use :python:`open()` to restore the values as they are currently on disk "
"(this is equivalent to rollback in transactional databases)"
msgstr ""
"Si vous ne confirmez pas les changements, les opérations d'insertion, "
"de suppression et de mise à jour ne seront pas sauvegardés sur le disque"

#: ../../source/pythonengine.rst:89
msgid "delete a record"
msgstr "pour supprimer un enregistrement"

#: ../../source/pythonengine.rst:95
msgid "or, if you know the record identifier"
msgstr "ou, si vous connaissez l'identifiant"

#: ../../source/pythonengine.rst:102
msgid "to delete a list of records"
msgstr "pour supprimer une liste d'enregistrements"

#: ../../source/pythonengine.rst:108
msgid ""
"where list_of_records can be any iterable (list, tuple, set, etc) yielding "
"records"
msgstr ""
"liste_d_enregistrements peut être n'importe quel itérable (liste, tuple, set, etc) "
"qui produit des enregistrements"

#: ../../source/pythonengine.rst:111
msgid "to update a record"
msgstr ""

#: ../../source/pythonengine.rst:118
msgid ""
"besides the fields passed to the :python:`create()` method, an internal "
"field called :python:`__id__` is added. It is an integer which is guaranteed"
" to be unique and unchanged for each record in the base, so that it can be "
"used as the record identifier"
msgstr ""
"En plus des champs passés à la méthode :python:`create()`, un champ interne "
"appelé __id__ est ajouté. C'est un entier, unique et inchangé pour chaque "
"enregistrement, il peut donc être utilisé comme identifiant pour l'enregistrement"

#: ../../source/pythonengine.rst:119
msgid ""
"another internal field called :python:`__version__` is also managed by the "
"database engine. It is an integer which is set to 0 when the record is "
"created, then incremented by 1 each time the record is updated. This is used"
" to detect concurrency control, for instance in a web application where 2 "
"users select the same record and want to update it at the same time"
msgstr ""
"un autre champ interne appelé :python:`__version__` est également géré par le "
"moteur de base de données. Il s'agit d'un entier qui est initialisé à 0 quand "
"l'enregistrement est créé, et incrémenté de 1 à chaque fois que l'enregistrement "
"est mis à jour. Ceci sert pour la détection des accès concurrents, par exemple "
"dans une application web dans laquelle deux utilisateurs veulent mettre à jour "
"le même enregistrement en même temps."

#: ../../source/pythonengine.rst:123
msgid "Selection"
msgstr "Sélection"

#: ../../source/pythonengine.rst:125
msgid "The instance of Base is a Python iterator"
msgstr "L'instance de Base est un itérateur sur les enregistrements"

#: ../../source/pythonengine.rst:128
msgid "to iterate on all the records"
msgstr "Pour itérer sur tous les enregistrements"

#: ../../source/pythonengine.rst:136
msgid "Direct access"
msgstr "Accès direct"

#: ../../source/pythonengine.rst:138
msgid "A record can be accessed by its identifier"
msgstr "On peut accéder directement à un enregistrement par son identifiant"

#: ../../source/pythonengine.rst:144
msgid "returns the record such that :python:`record['__id__'] == rec_id`"
msgstr "retourne l'enregistrement tel que :python:`record['__id__'] == rec_id`"

#: ../../source/pythonengine.rst:147
msgid "Simple selections"
msgstr "Sélection simples"

#: ../../source/pythonengine.rst:149
msgid ""
":python:`db(key1=val1, key2=val2)` returns the list of records where the "
"keys take the given values"
msgstr ""
":python:`db(key1=val1, key2=val2)` renvoie la liste des enregistrements "
"dont les clés ont les valeurs données "

#: ../../source/pythonengine.rst:150
msgid ""
":python:`db(key) >= val` returns an iterator on all records where the value "
"of the field key is greater than or equal to val."
msgstr ""
":python:`db(key) >= val` retourne un itérateur sur tous les enregistrements "
"pour lesquels la val du champ cle est supérieure ou égale à val."

#: ../../source/pythonengine.rst:152
msgid "Example"
msgstr "Exemple"

#: ../../source/pythonengine.rst:159
msgid ""
"such \"rich comparison\" operations can be combined with & (AND) and | (OR)"
msgstr ""
"ces \"comparaisons riches\" peuvent être combinées avec des & (et) et des | (ou)"

#: ../../source/pythonengine.rst:167
msgid "List comprehension"
msgstr "Listes en intension"

#: ../../source/pythonengine.rst:169
msgid "The selection of records can use Python list comprehension syntax"
msgstr "la sélection d'enregistrements peut utiliser la syntaxe des listes en intension (\"list comprehensions\") de Python"

#: ../../source/pythonengine.rst:175
msgid ""
"Returns the records in the base where the age is between 18 and 30, and size"
" is below 2 meters. The record is a dictionary, where the key is the field "
"name and value is the field value"
msgstr ""
"retourne les enregistrements de la base pour lesquels l'âge est compris entre "
"18 et 30 ans, et la taille est inférieure à 2 mètres. L'enregistrement est un "
"dictionnaire, où la clé est le nom de champ et la valeur est la valeur de ce champ"

#: ../../source/pythonengine.rst:177
msgid "Python generator expression syntax can also be used"
msgstr "la syntaxe des générateurs d'expression Python peut aussi être utilisée"

#: ../../source/pythonengine.rst:184
msgid "iterates on the records where the name is one of 'homer' or 'marge'"
msgstr "itère sur les enregistrements dont le nom est 'homer' ou 'marge'"

#: ../../source/pythonengine.rst:187
msgid "Index"
msgstr ""

#: ../../source/pythonengine.rst:189
msgid ""
"To speed up selections, an index can be created on a field using "
":func:`create_index('field') <pydblite.pydblite._Base.create_index>`"
msgstr ""
"Pour accélérer les sélections, un index peut être créé sur un champ "
":func:`create_index('field') <pydblite.pydblite._Base.create_index>`"

#: ../../source/pythonengine.rst:195
msgid ""
"When an index is created, the database instance has an attribute (here "
":python:`_age` : note the heading underscore, to avoid name conflicts with "
"internal names). This attribute is a dictionary-like object, where keys are "
"the values taken by the field, and values are the records whose field values"
" are egal to the key :"
msgstr ""
"Quand un index est créé, l'instance de la base de données a un attribut "
"(ici _age : noter le signe de soulignement initial, pour éviter les conflits "
"de noms avec des noms internes). Cet attribut est un objet de type dictionnaire, "
"où les clés sont les valeurs prises par le champ, et les valeurs sont les "
"enregistrements dont le champ a la même valeur que la clé :"

#: ../../source/pythonengine.rst:197
msgid ""
":python:`records = db._age[23]` returns the list of records with "
":python:`age == 23`"
msgstr ""
":python:`records = db._age[23]` retourne la liste des enregistrements avec "
":python:`age == 23`"

#: ../../source/pythonengine.rst:199
msgid ""
"If no record has this value, lookup by this value returns an empty list"
msgstr "Si aucun enregistrement n'a cette valeur, la recherche par cette valeur retourne une liste vide"

#: ../../source/pythonengine.rst:201
msgid ""
"The index supports iteration on the field values, and the :python:`keys()` "
"method returns all existing values for the field"
msgstr ""
"L'index supporte l'itération sur les valeurs du champ, et la méthode :python:`keys()` "
"retourne toutes les valeurs existantes pour le champ"

#: ../../source/pythonengine.rst:204
msgid "Other attributes and methods"
msgstr "Autres attributs et méthodes"

#: ../../source/pythonengine.rst:206
msgid ""
":func:`add_field('new_field'[,default=v]) "
"<pydblite.pydblite._Base.add_field>`: adds a new field to an existing base. "
":python:`default` is an optional default value ; set to :python:`None` if "
"not specified"
msgstr ""
":func:`add_field('new_field'[,default=v]) "
"<pydblite.pydblite._Base.add_field>`: ajoute un nouveau champ à la base de données. "
":python:`default` est une valeur par défaut ; elle vaut :python:`None` si elle n'est pas précisée"

#: ../../source/pythonengine.rst:207
msgid ""
":func:`drop_field('field') <pydblite.pydblite._Base.drop_field>`: drops an "
"existing field"
msgstr ""
":func:`drop_field('field') <pydblite.pydblite._Base.drop_field>`: supprime un champ existant"

#: ../../source/pythonengine.rst:208
msgid ""
":attr:`db.path <pydblite.pydblite._Base.path>`: the path of the database in "
"the file system"
msgstr ""
":attr:`db.path <pydblite.pydblite._Base.path>`: the chemin de la base de données "
"dans le système de fichiers"

#: ../../source/pythonengine.rst:209
msgid ""
":attr:`db.name <pydblite.pydblite._Base.name>`: the database name : the "
"basename of the path, stripped of its extension"
msgstr ""
":attr:`db.name <pydblite.pydblite._Base.name>`: le nom de la base de données : le "
"nom de base du chemin (sans le répertoire), auquel on a enlevé l'extension"

#: ../../source/pythonengine.rst:210
msgid ""
":attr:`db.fields <pydblite.pydblite._Base.fields>`: the list of the fields "
"(does not include the internal fields :python:`__id__` and "
":python:`__version__`)"
msgstr ""
":attr:`db.fields <pydblite.pydblite._Base.fields>`: la liste des champs "
"(n'inclut pas les champs internes :python:`__id__` et "
":python:`__version__`)"

#: ../../source/pythonengine.rst:211
msgid ":python:`len(db)` : number of records in the base"
msgstr ":python:`len(db)` : nombre d'enregistrements dans la base"
